/**
 * Copyright 2011 Tim Simpson
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
~import Macaroni::Model::Element;
//~import Macaroni::Lua::LuaClass;
//~import Macaroni::Lua::LuaFunction;
//~import Macaroni::Lua::LuaOperator;
//~import Macaroni::Lua::LuaProperty;
~import Macaroni::Model::NodePtr;
~import Macaroni::Model::Reason;


class Macaroni::Model::Project::Project {};

class Macaroni::Model::Project::ProjectLuaMetaData {
	~hfile=<Macaroni/Model/Project/ProjectLuaMetaData.h>
};

typedef boost::intrusive_ptr<Macaroni::Model::Project::Project> 
	Macaroni::Model::Project::ProjectPtr
	//@LuaClass [ SameAsNode = Project ]
	//@UseLightDef true
;

class Macaroni::Model::Project::Project : public Element
	//@LuaClass [ 
	//	LuaGlueClass = ProjectLuaMetaData,
	//	ReferenceType = ProjectPtr 
	//]
{
	private Project(Node * node, Reason * reasonCreated)
		: Element(node, reasonCreated)
	{
	}

	public virtual const char * GetTypeName() const 
	{
		return "Project";
	}
};

//TODO: There is a bug that keeps Macaroni from working if the namespace
// is declared above like usual.
namespace Macaroni::Model::Project {}
