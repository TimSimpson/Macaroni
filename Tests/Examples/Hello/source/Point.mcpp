~import Hello::Geometry::Point;
~import std::cout;
~import std::endl;
~import std::ostream;

class Main
{
	~block "cpp"
	{
		int main()
		{
			cout << "Hello world." << endl;			
			Point a(50, 50);
			Point b(100, 100);
			Point c = a - b;
			cout << "A = " << a << endl 
			     << "B = " << b << endl
			     << "C = A -B = " << c << endl;
			cout << "Goodbyte" << endl;
		}	
	}	
};

namespace Hello::Geometry
{
	class Point
	/* Implements a 2 point vector.  */
	{	
		private int x;
		private int y;
		
		public Point(const int x, const int y)
		:  x(x),
		   y(y)
		{		
		}
		
		public Point operator + (const Point & other) const
		{
			return Point(x + other.x, y + other.y);
		}
		
		public Point operator - (const Point & other) const
		{
			return Point(x - other.x, y - other.y);
		}
		
		public ~global(::) ~friend ostream & operator << (ostream & output, 
		                                                  const Point & input)
		{
			output << "(" << input.x << ", " << input.y << ")";
			return output;
		} 
		
		public inline int X() const
		{
			return x;
		}
		
		public inline int Y() const
		{
			return y;
		}
		
		public void setX(int value)
		{
			x = value;
		}	
		
		public void setY(int value)
		{
			y = value;
		}
	};
}