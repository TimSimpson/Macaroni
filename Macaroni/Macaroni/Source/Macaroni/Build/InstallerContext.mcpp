~import Macaroni::Model::Library;
~import Macaroni::Model::LibraryPtr;
~import Macaroni::Build::Manifest;
~import Macaroni::Build::ManifestPtr;
~import Macaroni::IO::Path;
~import Macaroni::IO::PathPtr;
~import boost::shared_ptr;

namespace Macaroni::Build {

class InstallerContext
{			
	private PathPtr installDir;
	private LibraryPtr library;
	private PathPtr outputDir;	
	private PathPtr sourceDir;

	public InstallerContext(LibraryPtr library, PathPtr sourceDir, 
							PathPtr outputDir, PathPtr installDir)
	: installDir(installDir),
	  library(library),
	  outputDir(outputDir),
	  sourceDir(sourceDir)
	{
	}

	public inline PathPtr & GetInstallDir()
	{
		return installDir;
	}

	public inline LibraryPtr GetLibrary() 
	{
		return library;
	}	

	public inline PathPtr & GetOutputDir()
	{
		return outputDir;
	}

	public inline PathPtr & GetSourceDir()
	{
		return sourceDir;
	}

	
};

typedef shared_ptr<InstallerContext> InstallerContextPtr;

}// end namespace
