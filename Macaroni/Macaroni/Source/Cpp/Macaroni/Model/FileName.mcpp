#import Macaroni::Model::FileNamePtr;
#import std::string;
#import Macaroni::Model::FileName;

namespace Macaroni::Model{

class FileName{}

void intrusive_ptr_add_ref(FileName * p)
{
	p->referenceCount ++;
}

void intrusive_ptr_release(FileName * p)
{
	p->referenceCount --;
	if (p->referenceCount < 1)
	{
		delete p;
	}
}

class FileName
{
	friend intrusive_ptr_add_ref;
	
	friend intrusive_ptr_release;

	FileName(const string & name)
		:name(name), 
		 referenceCount(0)
	{
	}

	~FileName()
	{
	}

	FileNamePtr Create(const string & name)
	{
		return FileNamePtr(new FileName(name));
	}

	const string & GetName() const
	{
		return name;
	}

	int GetReferenceCount() const
	{
		return referenceCount;
	}

}

}
